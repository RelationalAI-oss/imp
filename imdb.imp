# 1a
info_type.info(it, "top 250 rank")
movie_info_idx.info_type(mi, it)
movie_info_idx.movie(mi, t)
title.title(t, title)
title.production_year(t, production_year)
movie_companies.movie(mc, t)
movie_companies.company_type(mc, ct)
company_type.kind(ct, "production companies")
movie_companies.note(mc, note)
contains(note, "(as Metro-Goldwyn-Mayer Pictures)") = false
(contains(note, "(co-production)") || contains(note, "(presents)")) = true

# 1b
info_type.info(it, "bottom 10 rank")
movie_info_idx.info_type(mi, it)
movie_info_idx.movie(mi, t)
title.title(t, title)
title.production_year(t, production_year)
(2005 <= production_year) = true
(production_year <= 2010) = true
movie_companies.movie(mc, t)
movie_companies.company_type(mc, ct)
company_type.kind(ct, "production companies")
movie_companies.note(mc, note)
contains(note, "(as Metro-Goldwyn-Mayer Pictures)") = false

# 1c
# compiler bug causes by merging identical exprs `true`
info_type.info(it, "top 250 rank")
movie_info_idx.info_type(mi, it)
movie_info_idx.movie(mi, t)
title.title(t, title)
title.production_year(t, production_year)
(production_year > 2010) = true
movie_companies.movie(mc, t)
movie_companies.company_type(mc, ct)
company_type.kind(ct, "production companies")
movie_companies.note(mc, note)
contains(note, "(as Metro-Goldwyn-Mayer Pictures)") = false
contains(note, "(co-production)") = true

# 1d
info_type.info(it, "bottom 10 rank")
movie_info_idx.info_type(mi, it)
movie_info_idx.movie(mi, t)
title.title(t, title)
title.production_year(t, production_year)
(production_year > 2000) = true
movie_companies.movie(mc, t)
movie_companies.company_type(mc, ct)
company_type.kind(ct, "production companies")
movie_companies.note(mc, note)
contains(note, "(as Metro-Goldwyn-Mayer Pictures)") = false

# 2a
keyword.keyword(k, "character-name-in-title")
movie_keyword.keyword(mk, k)
movie_keyword.movie(mk, t)
title.title(t, title)
movie_companies.movie(mc, t)
movie_companies.company(mc, cn)
company_name.country_code(cn, "[de]")

# 2b
keyword.keyword(k, "character-name-in-title")
movie_keyword.keyword(mk, k)
movie_keyword.movie(mk, t)
title.title(t, title)
movie_companies.movie(mc, t)
movie_companies.company(mc, cn)
company_name.country_code(cn, "[nl]")

# 2c
keyword.keyword(k, "character-name-in-title")
movie_keyword.keyword(mk, k)
movie_keyword.movie(mk, t)
title.title(t, title)
movie_companies.movie(mc, t)
movie_companies.company(mc, cn)
company_name.country_code(cn, "[sm]")

# 2d
keyword.keyword(k, "character-name-in-title")
movie_keyword.keyword(mk, k)
movie_keyword.movie(mk, t)
title.title(t, title)
movie_companies.movie(mc, t)
movie_companies.company(mc, cn)
company_name.country_code(cn, "[us]")